# User and worker processes
worker_processes 1;

# Error logging
error_log /var/log/nginx/error.log warn;

# Events block
events {
    worker_connections 1024;
}

# HTTP block
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Server block for HTTP to HTTPS redirection
    server {
        listen 80;
        server_name anywheredoor.online www.anywheredoor.online;
        return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
    }

    # Server block for HTTPS traffic
    server {
        listen 443 ssl; # Listen for HTTPS traffic
        server_name anywheredoor.online www.anywheredoor.online;

        # SSL Configuration - IMPORTANT: Point to the copied files in /etc/nginx/certs/
        ssl_certificate /etc/nginx/certs/fullchain.pem; # NEW PATH
        ssl_certificate_key /etc/nginx/certs/privkey.pem; # NEW PATH

        # Include standard SSL options and DH params from our dedicated certs directory
        include /etc/nginx/certs/options-ssl-nginx.conf; # NEW PATH
        ssl_dhparam /etc/nginx/certs/ssl-dhparams.pem; # NEW PATH

        # Configuration for Certbot's webroot challenge (still needed for renewals)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Proxy requests for your backend API
        location /api/ {
            proxy_pass http://backend:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            client_max_body_size 100M;
        }

        # Proxy requests for your frontend application
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Additional security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
    }
}
