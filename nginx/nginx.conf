worker_processes 1; # This should be at the top-level

events { # This MUST be at the top-level
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80; # Nginx will listen on port 80
        server_name _; # Catch-all for HTTP requests

        # Backend API
        location /api/ {
            proxy_pass http://backend:8080/; # 'backend' is the service name in docker-compose
            proxy_http_version 1.1; # Important for WebSocket/HTTP/2
            proxy_set_header Upgrade $http_upgrade; # Important for WebSocket
            proxy_set_header Connection 'upgrade'; # Important for WebSocket
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade; # Important for WebSocket
            client_max_body_size 100M; # Adjust as needed for large files
        }

        # Frontend
        location / {
            proxy_pass http://frontend:3000/; # 'frontend' is the service name in docker-compose
            proxy_http_version 1.1; # Important for WebSocket/HTTP/2
            proxy_set_header Upgrade $http_upgrade; # Important for WebSocket
            proxy_set_header Connection 'upgrade'; # Important for WebSocket
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade; # Important for WebSocket
        }

        # Additional security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
    }
}
